const CARD = {
  fullName: "Dr. Alex Rivera",
  title: "Clinical Psychologist",
  mobile: "+61 400 123 456",
  email: "alex@vibemind.au",
  company: "Vibemind Clinic",
  bizphone: "+61 3 9000 0000",
  address: "12 High St, Ivanhoe VIC 3079",
  website: "https://vibemind.au",
  about: "Hi! I help people with a practical, warm approach.",
  services: ["Individual therapy","Couples therapy","Telehealth consultations"]
};
const STORAGE_KEYS = { appts: "vm_appointments" };
const $ = sel => document.querySelector(sel);
function toast(msg){ const el = $("#toast"); el.textContent = msg; el.classList.add("show"); setTimeout(()=>el.classList.remove("show"), 2200); }
function renderCard(){
  $("#fullName").textContent = CARD.fullName;
  $("#title").textContent = CARD.title;
  $("#mobile").textContent = CARD.mobile;
  $("#mobile").href = `tel:${CARD.mobile.replace(/\s+/g,"")}`;
  $("#email").textContent = CARD.email;
  $("#email").href = `mailto:${CARD.email}`;
  $("#company").textContent = CARD.company;
  $("#bizphone").textContent = CARD.bizphone;
  $("#bizphone").href = `tel:${CARD.bizphone.replace(/\s+/g,"")}`;
  $("#address").textContent = CARD.address;
  $("#website").textContent = CARD.website;
  $("#website").href = CARD.website;
  $("#about").textContent = CARD.about;
  const ul = document.querySelector("#services");
  ul.innerHTML = "";
  CARD.services.forEach(s => { const li = document.createElement("li"); li.textContent = s; ul.appendChild(li); });
  const v = [
    "BEGIN:VCARD","VERSION:3.0",
    `N:${CARD.fullName.split(" ").slice(1).join(" ")};${CARD.fullName.split(" ")[0]};;;`,
    `FN:${CARD.fullName}`,`ORG:${CARD.company}`,`TITLE:${CARD.title}`,
    `TEL;TYPE=CELL:${CARD.mobile}`,`TEL;TYPE=WORK:${CARD.bizphone}`,
    `EMAIL;TYPE=WORK:${CARD.email}`,`URL:${CARD.website}`,
    `ADR;TYPE=WORK:;;${CARD.address};;;;`,"END:VCARD"
  ].join("\n");
  const blob = new Blob([v], {type: "text/vcard"});
  $("#vcardBtn").href = URL.createObjectURL(blob);
  $("#shareBtn").onclick = async () => {
    const shareData = { title:"VibeMind Card", text:`Contact ${CARD.fullName} at ${CARD.company}`, url: location.origin + location.pathname };
    if (navigator.share) { try { await navigator.share(shareData); } catch{} }
    else { await navigator.clipboard.writeText(shareData.url); toast("Copied link to clipboard"); }
  };
}
function loadAppts(){ try { return JSON.parse(localStorage.getItem(STORAGE_KEYS.appts) || "[]"); } catch { return []; } }
function saveAppts(list){ localStorage.setItem(STORAGE_KEYS.appts, JSON.stringify(list)); }
function addAppt(obj){ const list = loadAppts(); if (obj.rid && list.some(a => a.rid === obj.rid)) return false; list.push(obj); list.sort((a,b)=> new Date(a.when) - new Date(b.when)); saveAppts(list); return true; }
function renderAppts(){
  const list = loadAppts();
  const ul = document.querySelector("#apptList"); ul.innerHTML = "";
  document.querySelector("#apptEmpty").style.display = list.length ? "none":"block";
  list.forEach(a => {
    const li = document.createElement("li");
    const left = document.createElement("div");
    left.innerHTML = `<div><strong>${new Date(a.when).toLocaleString([], {dateStyle:"medium", timeStyle:"short"})}</strong></div>
      <div class="muted">${a.name || CARD.fullName}${a.loc ? " â€¢ "+a.loc : ""}</div>`;
    const right = document.createElement("div"); right.className="action-links";
    const ics = buildICS(a);
    const dl = document.createElement("a");
    dl.href = URL.createObjectURL(new Blob([ics], {type:"text/calendar"}));
    dl.download = `appointment-${a.rid || Date.now()}.ics`;
    dl.textContent = "Add to Calendar";
    right.appendChild(dl);
    li.appendChild(left); li.appendChild(right); ul.appendChild(li);
  });
}
function buildICS(a){
  const dt = new Date(a.when); const dtEnd = new Date(dt.getTime()+30*60*1000);
  const fmt = z => z.toISOString().replace(/[-:]/g,"").split(".")[0] + "Z";
  const uid = a.rid || (Date.now()+"@vibemind");
  const summary = `Appointment with ${a.name || CARD.fullName}`;
  const location = a.loc || CARD.address;
  const desc = `Generated by VibeMind Card\nContact: ${CARD.mobile} ${CARD.email}`;
  return [
    "BEGIN:VCALENDAR","VERSION:2.0","PRODID:-//VibeMind//Card//EN","BEGIN:VEVENT",
    `UID:${uid}`,`DTSTAMP:${fmt(new Date())}`,`DTSTART:${fmt(dt)}`,`DTEND:${fmt(dtEnd)}`,
    `SUMMARY:${summary}`,`LOCATION:${location}`,`DESCRIPTION:${desc}`,
    "END:VEVENT","END:VCALENDAR"
  ].join("\r\n");
}
function handleQueryParams(){
  const q = new URLSearchParams(location.search);
  const appt = q.get("appt"); const name = q.get("name"); const loc = q.get("loc"); const rid = q.get("rid");
  if (appt){
    const ok = addAppt({ when: appt, name, loc, rid });
    renderAppts(); if (ok) toast("Appointment saved"); else toast("Appointment already saved");
    history.replaceState(null, "", location.pathname);
  }
}
async function registerSW(){ if ("serviceWorker" in navigator) { try { await navigator.serviceWorker.register("./service-worker.js"); } catch{} } }
renderCard(); renderAppts(); handleQueryParams(); registerSW();
